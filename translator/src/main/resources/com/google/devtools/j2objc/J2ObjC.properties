# Copyright 2011 Google Inc. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Properties file for the J2ObjC tool.  This tool is not localized, but
# properties remain useful for text that likely to be changed frequently.

# Header used for generated files.
# Parameters: source file
file-header = //\n\
//  Generated by the J2ObjC translator.  DO NOT EDIT!\n\
//  source: %s\n\
//\n

# Usage message, displayed when an invalid option is specified.
usage-message = Usage: j2objc <options> <source files>\n\
use --help for a list of possible options

# Help message.
help-message = Usage: j2objc <options> <source files>\n\
Common options:\n\
  -sourcepath <path>           Specify where to find input source files.\n\
  -classpath <path>            Specify where to find user class files.\n\
  -d <directory>               Specify where to place generated Objective-C files.\n\
  -encoding <encoding>         Specify character encoding used by source files.\n\
  -g                           Generate Java source debugging support.\n\
  -q, --quiet                  Do not print status messages.\n\
  -v, --verbose                Output messages about what the translator is doing.\n\
  -Werror                      Make all warnings into errors.\n\
  -h, --help                   Print this message.\n\n\
Other options:\n\
  --batch-translate-max=<n>    The maximum number of source files that are translated.\
  \n                               together. Batching speeds up translation, but\
  \n                               requires more memory.\n\
  --build-closure              Translate dependent classes if out-of-date.\n\
  --dead-code-report <file>    Specify a ProGuard usage report for dead code elimination.\n\
  --doc-comments               Translate Javadoc comments into Xcode-compatible comments.\n\
  --extract-unsequenced        Rewrite expressions that would produce unsequenced\
  \n                               modification errors.\n\
  --generate-deprecated        Generate deprecated attributes for deprecated methods,\
  \n                               classes and interfaces.\n\
  -J<flag>                     Pass Java <flag>, such as -Xmx1G, to the system runtime.\n\
  --mapping <file>             Add a method mapping file.\n\
  --no-class-methods           Don't emit class methods for static Java methods.\
  \n                               (static methods are always converted to functions)\n\
  --no-final-methods-functions Disable generating functions for final methods.\n\
  --no-hide-private-members    Includes private fields and methods in header file.\n\
  --no-package-directories     Generate output files to specified directory, without\
  \n                               creating package sub-directories.\n\
  -pluginpath <path>           Specify where to find plugin class files.\n\
  -pluginoptions <options>     Comma separated key=value pairs passed to all plugins.\n\
  --prefix <package=prefix>    Substitute a specified prefix for a package name.\n\
  --prefixes <file>            Specify a properties file with prefix definitions.\n\
  --preserve-full-paths        Generates output files with the same relative paths as \
  \n                               the input files.\n\
  --strip-gwt-incompatible     Removes methods that are marked with a GwtIncompatible\
  \n                               annotation, unless its value is known to be compatible.\n\
  --strip-reflection           Do not generate metadata needed for Java reflection.\n\
  --segmented-headers          Generates headers with guards around each declared type.\
  \n                               Useful for breaking import cycles.\n\
  -t, --timing-info            Print time spent in translation steps.\n\
  -use-arc                     Generate Objective-C code to support Automatic\
  \n                               Reference Counting (ARC).\n\
  -use-reference-counting      Generate Objective-C code to support iOS manual\
  \n                               reference counting (default).\n\
  -x <language>                Specify what language to output.  Possible values\
  \n                               are objective-c (default) and objective-c++.\n\
  -Xbootclasspath:<path>       Boot path used by translation (not the tool itself).\n\
  -Xno-jsni-warnings           Warn if JSNI (GWT) native code delimiters are used\
  \n                               instead of OCNI delimiters.\n
